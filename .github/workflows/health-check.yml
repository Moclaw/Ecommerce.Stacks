name: 'Health Check - Development'

on:
  schedule:
    # Run health checks every 15 minutes
    - cron: '*/15 * * * *'
  workflow_dispatch:

jobs:
  health-check:
    name: 'Development Health Check'
    runs-on: self-hosted
    
    steps:
    - name: 'Check API Gateway Health'
      id: gateway-health
      run: |
        if curl -f --max-time 30 http://localhost:5000/health 2>/dev/null; then
          echo "‚úÖ API Gateway is healthy"
          echo "status=healthy" >> $GITHUB_OUTPUT
        else
          echo "‚ùå API Gateway is unhealthy"
          echo "status=unhealthy" >> $GITHUB_OUTPUT
        fi

    - name: 'Check PostgreSQL Health'
      id: postgres-health
      run: |
        if docker-compose exec -T postgres pg_isready -U ecommerce_user -d ecommerce_db 2>/dev/null; then
          echo "‚úÖ PostgreSQL is healthy"
          echo "status=healthy" >> $GITHUB_OUTPUT
        else
          echo "‚ùå PostgreSQL is unhealthy"
          echo "status=unhealthy" >> $GITHUB_OUTPUT
        fi

    - name: 'Check MongoDB Health'
      id: mongodb-health
      run: |
        if docker-compose exec -T mongodb mongosh --eval "db.adminCommand('ping')" --quiet 2>/dev/null; then
          echo "‚úÖ MongoDB is healthy"
          echo "status=healthy" >> $GITHUB_OUTPUT
        else
          echo "‚ùå MongoDB is unhealthy"
          echo "status=unhealthy" >> $GITHUB_OUTPUT
        fi

    - name: 'Check Redis Health'
      id: redis-health
      run: |
        if docker-compose exec -T redis redis-cli ping 2>/dev/null | grep -q PONG; then
          echo "‚úÖ Redis is healthy"
          echo "status=healthy" >> $GITHUB_OUTPUT
        else
          echo "‚ùå Redis is unhealthy"
          echo "status=unhealthy" >> $GITHUB_OUTPUT
        fi

    - name: 'Check Docker Containers'
      run: |
        echo "üìä Docker Container Status:"
        docker-compose ps --format "table {{.Name}}\t{{.State}}\t{{.Status}}"
        
        echo ""
        echo "üíæ Docker System Info:"
        docker system df

    - name: 'Generate Health Summary'
      run: |
        echo "# üè• Health Check Summary - $(date)" 
        echo ""
        echo "| Service | Status |"
        echo "|---------|---------|"
        echo "| API Gateway | ${{ steps.gateway-health.outputs.status }} |"
        echo "| PostgreSQL | ${{ steps.postgres-health.outputs.status }} |"
        echo "| MongoDB | ${{ steps.mongodb-health.outputs.status }} |"
        echo "| Redis | ${{ steps.redis-health.outputs.status }} |"
        echo ""
        
        # Count unhealthy services
        UNHEALTHY_COUNT=0
        if [ "${{ steps.gateway-health.outputs.status }}" = "unhealthy" ]; then
          UNHEALTHY_COUNT=$((UNHEALTHY_COUNT + 1))
        fi
        if [ "${{ steps.postgres-health.outputs.status }}" = "unhealthy" ]; then
          UNHEALTHY_COUNT=$((UNHEALTHY_COUNT + 1))
        fi
        if [ "${{ steps.mongodb-health.outputs.status }}" = "unhealthy" ]; then
          UNHEALTHY_COUNT=$((UNHEALTHY_COUNT + 1))
        fi
        if [ "${{ steps.redis-health.outputs.status }}" = "unhealthy" ]; then
          UNHEALTHY_COUNT=$((UNHEALTHY_COUNT + 1))
        fi
        
        if [ $UNHEALTHY_COUNT -eq 0 ]; then
          echo "üéâ All services are healthy!"
        else
          echo "‚ö†Ô∏è $UNHEALTHY_COUNT service(s) are unhealthy"
        fi

    - name: 'Restart Unhealthy Services'
      if: contains(steps.*.outputs.status, 'unhealthy')
      run: |
        echo "üîÑ Attempting to restart unhealthy services..."
        
        if [ "${{ steps.gateway-health.outputs.status }}" = "unhealthy" ]; then
          echo "Restarting API Gateway..."
          docker-compose restart gateway
        fi
        
        if [ "${{ steps.postgres-health.outputs.status }}" = "unhealthy" ]; then
          echo "Restarting PostgreSQL..."
          docker-compose restart postgres
        fi
        
        if [ "${{ steps.mongodb-health.outputs.status }}" = "unhealthy" ]; then
          echo "Restarting MongoDB..."
          docker-compose restart mongodb
        fi
        
        if [ "${{ steps.redis-health.outputs.status }}" = "unhealthy" ]; then
          echo "Restarting Redis..."
          docker-compose restart redis
        fi
        
        echo "Waiting 30 seconds for services to restart..."
        sleep 30
        
        echo "Service status after restart:"
        docker-compose ps
