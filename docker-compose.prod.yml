# Docker Compose override for Production Environment
version: '3.8'

services:
  gateway:
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080;https://+:8081
    deploy:
      replicas: 3
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  postgres:
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '2.0'
        reservations:
          memory: 1G
          cpus: '1.0'
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
      - ./backups:/backups
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"

  mongodb:
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '2.0'
        reservations:
          memory: 1G
          cpus: '1.0'
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
    volumes:
      - mongo_data_prod:/data/db
      - ./backups:/backups
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"

  redis:
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
    volumes:
      - redis_data_prod:/data
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  kafka:
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '2.0'
        reservations:
          memory: 1G
          cpus: '1.0'
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
    volumes:
      - kafka_data_prod:/var/lib/kafka/data
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"

  zookeeper:
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
    volumes:
      - zookeeper_data_prod:/var/lib/zookeeper/data
      - zookeeper_logs_prod:/var/lib/zookeeper/log
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Remove management tools in production
  adminer:
    profiles: ["debug"]
  
  mongo-express:
    profiles: ["debug"]
  
  redis-commander:
    profiles: ["debug"]

  kafka-ui:
    profiles: ["debug"]

volumes:
  postgres_data_prod:
    driver: local
  mongo_data_prod:
    driver: local
  redis_data_prod:
    driver: local
  kafka_data_prod:
    driver: local
  zookeeper_data_prod:
    driver: local
  zookeeper_logs_prod:
    driver: local

networks:
  ecommerce-network:
    driver: bridge
    name: ecommerce-production-network
